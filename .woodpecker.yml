name: Deploy Watchtower

when:
  event:
    - push

steps:
  git-pull:
    image: alpine/git
    volumes:
      - /tank:/tank
    commands:
      - cd /tank/docker/compose/watchtower
      - git config --global --add safe.directory /tank/docker/compose/watchtower
      - git pull origin main

  render-env:
    image: python:3.12
    environment:
      WATCHTOWER_HOSTNAME: raspberrypi
      WATCHTOWER_NOTIFICATIONS: email
      EMAIL_FROM: from_secret
      EMAIL_TO: from_secret
      EMAIL_SERVER: from_secret
      EMAIL_PORT: from_secret
      EMAIL_USER: from_secret
      EMAIL_PASS: from_secret
    commands:
      - pip install jinja2-cli
      - cd /tank/docker/compose/watchtower
      - |
        echo '{
          "watchtower_hostname": "'"$WATCHTOWER_HOSTNAME"'",
          "notifications": "'"$WATCHTOWER_NOTIFICATIONS"'",
          "email_from": "'"$EMAIL_FROM"'",
          "email_to": "'"$EMAIL_TO"'",
          "email_server": "'"$EMAIL_SERVER"'",
          "email_port": "'"$EMAIL_PORT"'",
          "email_user": "'"$EMAIL_USER"'",
          "email_pass": "'"$EMAIL_PASS"'",
          "cleanup": true,
          "include_restarting": true,
          "poll_interval": 86400
        }' > context.json
      - jinja2 env.j2 context.json > .env
      - chmod 600 .env

  restart-compose:
    image: docker:cli
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tank:/tank
    commands:
      - cd /tank/docker/compose/watchtower
      - docker compose down
      - docker compose up -d

